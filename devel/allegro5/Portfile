# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup cmake 1.0

cmake.out_of_source yes

# build architectures separately so that variable such as CMAKE_CXX_SIZEOF_DATA_PTR are set correctly
PortGroup muniversal 1.0

name            allegro5
subport ${name}-devel {}

if {${name} eq ${subport}} {
    PortGroup       github 1.0
    github.setup    liballeg allegro5 5.2.2.0
} else {
    replaced_by     allegro5
    PortGroup       obsolete 1.0
    version         5.1.8
    revision        1
}
description     A game programming library for C/C++ developers.
long_description \
                Allegro is a game programming library for \
                C/C++ developers distributed freely, supporting \
                many platforms.
maintainers     nomaintainer
categories      devel games
platforms       darwin
license         Permissive
homepage        http://liballeg.org/

if {${name} eq ${subport}} {
    checksums           rmd160  83f9984ce79d3cf571e9c2fc64ff6489ce9e9165 \
                        sha256  668c0e88aec6690f250aa95ae1927154de75a99b7318500bc9b248e639a46ebd

    depends_build-append \
                    port:libxslt \
                    port:pkgconfig \
                    path:lib/libxar.dylib:xar
    depends_lib     port:flac      \
                    port:libdumb   \
                    port:libpcap   \
                    port:libogg    \
                    port:libvorbis \
                    port:freetype  \
                    port:zlib      \
                    port:physfs    \
                    port:libtheora \
                    port:opusfile

    # prevents errors when upgrading (prevents new allegro5 from finding old allegro5)
    configure.cppflags-replace -I${prefix}/include -isystem${prefix}/include

    livecheck.type  regex
    livecheck.url   http://liballeg.org/download.html
    # This livecheck tries to match the stable branch only
    livecheck.regex (5\\.(?:\\d*\[02468\])(?:\\.\\d+)*)${extract.suffix}
}
