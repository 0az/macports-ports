--- configure.py.orig	2016-11-11 06:57:28.000000000 -0700
+++ configure.py	2016-11-11 07:06:04.000000000 -0700
@@ -923,18 +923,18 @@
 
         # The binary MacOS/X Qt installer defaults to XCode.  If this is what
         # we might have then use macx-clang (Qt v5) or macx-g++ (Qt v4).
-        if sys.platform == 'darwin':
-            try:
-                # Qt v5.
-                if qt_config.QMAKE_SPEC == 'macx-xcode':
-                    # This will exist (and we can't check anyway).
-                    self.qmake_spec = 'macx-clang'
-                else:
-                    # No need to explicitly name the default.
-                    self.qmake_spec = ''
-            except AttributeError:
-                # Qt v4.
-                self.qmake_spec = 'macx-g++'
+        #if sys.platform == 'darwin':
+        #    try:
+        #        # Qt v5.
+        #        if qt_config.QMAKE_SPEC == 'macx-xcode':
+        #            # This will exist (and we can't check anyway).
+        #            self.qmake_spec = 'macx-clang'
+        #        else:
+        #            # No need to explicitly name the default.
+        #            self.qmake_spec = ''
+        #    except AttributeError:
+        #        # Qt v4.
+        #        self.qmake_spec = 'macx-g++'
 
         self.qt_version_str = getattr(qt_config, 'QT_VERSION', '')
         self.api_dir = os.path.join(qt_config.QT_INSTALL_DATA, 'qsci')
@@ -1526,6 +1526,14 @@
         args.append('-spec')
         args.append(target_config.qmake_spec)
 
+    args.append('QMAKE_MACOSX_DEPLOYMENT_TARGET='+os.environ['QMAKE_MACOSX_DEPLOYMENT_TARGET'])
+    args.append('QT_ARCH='+os.environ['QT_ARCH'])
+    args.append('QT_TARGET_ARCH='+os.environ['QT_TARGET_ARCH'])
+    args.append('QMAKE_CXXFLAGS-=-stdlib=libc++')
+    args.append('QMAKE_CXXFLAGS+=-stdlib='+os.environ['QT_CXX_STDLIB'])
+    args.append('QMAKE_LFLAGS-=-stdlib=libc++')
+    args.append('QMAKE_LFLAGS+=-stdlib='+os.environ['QT_CXX_STDLIB'])
+
     args.append(pro_file)
 
     _run_command(' '.join(args), verbose)
