# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake                       1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github                      1.0
PortGroup           cxx11                       1.1
PortGroup           legacysupport               1.0

github.setup        cern-fts davix 0.7.1 v
version             ${github.version}
revision            0

set davix_tag       [string map {. _} ${github.version}]
master_sites        ${github.homepage}/releases/download/R_${davix_tag}

checksums           rmd160  760e6dd707c262b68d38f35df621cfe08dbe81eb \
                    sha256  0d13c21d5d4ef9194313ae4cfba8095ac5a4272f276993c43103f833514f206b \
                    size    4336124

livecheck.version   ${davix_tag}
livecheck.type      regex
livecheck.url       ${github.homepage}/tags
livecheck.regex     R_(\[0-9_\]+)${extract.suffix}

categories          net
maintainers         {jonesc @cjones051073} openmaintainer

description         High-performance file management over WebDAV / HTTP

long_description    Davix aims to make the task of managing files over \
                    HTTP-based protocols simple. It is being developed \
                    by IT-ST at CERN, and while the project's purpose  \
                    is its use on the CERN grid, the functionality     \
                    offered is generic.

license             LGPL-2.1
platforms           darwin

set py_ver          3.6
set py_ver_no_dot   [join [split ${py_ver} "."] ""]

depends_build-append port:pkgconfig

depends_lib         port:libxml2 \
                    port:openssl \
                    port:python${py_ver_no_dot}

configure.args-append -DPYTHON_EXECUTABLE=${prefix}/bin/python${py_ver}

pre-configure {
    # Force use of system python in build scripts
    # Find command finds text files containing the string to be replaced.
    set pystringtoreplace "/usr/bin/env python2"
    foreach f [ exec find ${worksrcpath} -type f -and -name "*.py" ] {
        reinplace -q "s|${pystringtoreplace}|${prefix}/bin/python${py_ver}|g" $f
    }
}
