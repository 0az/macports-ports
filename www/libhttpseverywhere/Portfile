# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                libhttpseverywhere
version             0.2.9
license             LGPL-3
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          www
maintainers         devans openmaintainer
platforms           darwin

description         This library enables you to leverage the power \
                    of HTTPSEverywhere to any desktop-application.

long_description    ${description}. HTTPSEverywhere is a browser plugin \
                    that comes with a set of rules that you can use \
                    to ensure that you use HTTP instead of HTTPS only \
                    when this is absolutely not circumventable. \
                    With libhttpseverywhere you get a C-bindable, \
                    GLib-based library you can link/bind against \
                    in almost all languages

homepage            https://git.gnome.org//browse/${name}
master_sites        gnome:sources/${name}/${branch}/

use_xz              yes

checksums           rmd160  d862d488b58fb8a6dc9ff127cccf8d7a9099b420 \
                    sha256  1226b2f7cc30db28bd1ccb0a84902e999488f1a99847940cbdab3d2e510be3e1

depends_build       port:pkgconfig \
                    port:meson \
                    port:ninja

depends_lib         path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:json-glib \
                    port:gobject-introspection \
                    port:libarchive \
                    port:libgee \
                    port:libsoup \
                    port:libxml2 \
                    port:vala

# meson requires builds be in build subdir
worksrcdir          ${distname}/build

configure.cmd       meson
configure.post_args ..

build.cmd           ninja
build.target

# DESTDIR must come before ninja command rather than after
destroot.cmd        DESTDIR=${destroot} ninja
destroot.destdir

# meson ninja backend improperly sets shared library install name and rpath
# based on build_dir rather than install_dir
post-destroot {
    set libname ${prefix}/lib/${name}-0.2.dylib
    system "install_name_tool -id ${libname} ${destroot}${libname}"
    system "install_name_tool -delete_rpath ${worksrcpath}/ ${destroot}${libname}"
}

livecheck.type      gnome
