# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake   1.0
PortGroup           github  1.0
PortGroup           active_variants 1.1
PortGroup           qt5     1.0

name                qgis3
set commit          1c1de3a
github.setup        qgis QGIS ${commit}
version             2.99.20171201
categories          gis
maintainers         vince
description         QGIS 3 is a user-friendly GIS based on Qt 5
long_description    QGIS is a GIS. It can visualize, inject data into\
                    PostGres/PostGIS, or serve as a Qt front-end to\
                    Grass. Extended with Python plugins, it can become\
                    a quite powerful GIS of its own.

platforms           darwin
license             GPL

use_parallel_build  no
homepage            http://www.qgis.org/

patchfiles          patch-app_info_plist_in.diff

#                    patch-PyQtMacros.diff

checksums           rmd160  a3d9d07479c61da4ce96e6e645eaf9a23c294c65 \
                    sha256  61d69356a7c53b201d733c1eb6e366c13f181bc022a7429fc17e38418e07bec0

worksrcdir          QGIS-${commit}

depends_lib-append  port:libiconv \
                    port:expat \
                    port:libzip \
                    path:lib/libssl.dylib:openssl \
                    port:proj \
                    port:geos \
                    port:gdal \
                    port:sqlite3 \
                    port:gsl \
                    port:fcgi \
                    port:spatialindex \
                    port:postgis2 \
                    port:qtkeychain

depends_build-append \
                    port:bison \
                    port:ld64

# QWT must be built with qt5 dependency
require_active_variants qwt61 qt5

post-extract {
    system -W ${worksrcpath} "mkdir build"
}


post-patch {
    reinplace -E "s|@@@|${prefix}|g" \
        ${worksrcpath}/mac/app.info.plist.in
#    reinplace -E "s|Clang|AppleClang|" ${worksrcpath}/CMakeLists.txt
    # Handle legacy OS/XCode
    if {[vercmp $xcodeversion 4.6.3] <= 0} {
        configure.compiler  llvm-gcc-4.2
    }
}


# Python related stuff

configure.args-append  "-DWITH_GRASS=OFF"
configure.args-append  "-DWITH_GRASS7=OFF"
configure.args-append  "-DWITH_QWTPOLAR=FALSE"
#configure.args-append  "--trace"


set py_ver              3.6
set Py_FRM              ${frameworks_dir}/Python.framework/Versions/${py_ver}

configure.ldflags       "-Wl,-rpath,${prefix}/libexec/qt5/lib"
configure.args-append   "-DWITH_3D=ON"
configure.args-append   "-DWITH_GLOBE=OFF"
configure.args-append   "-DLIBZIP_CONF_INCLUDE_DIR=${prefix}/lib/pkgconfig"
configure.args-append   "-DPYTHON_EXECUTABLE=${prefix}/bin/python${py_ver}"
configure.args-append   "-DWITH_BINDINGS=FALSE"
configure.args-append   "-DQCA_INCLUDE_DIR=${prefix}/libexec/qt5/include/QtCrypto"
configure.args-append   "-DQCA_LIBRARY=${prefix}/libexec/qt5/lib/libqca-qt5.dylib"
configure.args-append   "-DQSCINTILLA_INCLUDE_DIR=${prefix}/libexec/qt5/include"
configure.args-append   "-DQSCINTILLA_LIBRARY=${prefix}/libexec/qt5/lib/libqscintilla2_qt5.dylib"
configure.args-append   "-DQWT_LIBRARY=${prefix}/libexec/qt5/lib/libqwt.dylib"
configure.args-append   "-DQWT_INCLUDE_DIR=${prefix}/libexec/qt5/lib/qwt.framework/Versions/6/Headers"
configure.args-append   "-DQT_LRELEASE_EXECUTABLE=${prefix}/libexec/qt5/bin/lrelease"
# Server does not build
configure.args-append   "-DWITH_SERVER=FALSE"

    
depends_lib-append      port:python36 \
                        port:py36-pyqt5 \
                        port:py36-qscintilla-qt5 \
                        port:qt5-qtwebkit \
                        port:qt5-qtscript \
                        port:qt5-sqlite-plugin \
                        port:qca-qt5 \
                        port:qca-qt5-ossl \
                        port:py36-gdal \
                        port:qwt61 \
                        port:qjson-qt5

depends_build-append    port:py36-sip


depends_run-append      port:py36-psycopg2 \
                        port:py36-requests


# Database variants (from the GDAL port)
set postgresql_suffixes {95 96 10}

set portsgresql_variants {}
foreach s ${postgresql_suffixes} {
    lappend portsgresql_variants postgresql${s}
}

foreach s ${postgresql_suffixes} {
    set p postgresql${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${portsgresql_variants} ${p}]
    set c [lreplace ${portsgresql_variants} ${i} ${i}]
    eval [subst {
        variant ${p} description "Enable PostgreSQL ${v} support" conflicts ${c} {
            depends_lib-append      port:${p}
            configure.args-append   \
                    "-DPOSTGRES_CONFIG=${prefix}/lib/${p}/bin/pg_config"
        }
    }]
}

# postgresql default
set pgd "if {"
foreach s ${postgresql_suffixes} {
    set pgd "${pgd}!\[variant_isset postgresql${s}\] && "
}
set pgd [string range ${pgd} 0 end-4]
set pgd "${pgd}} { default_variants +postgresql10 }"
eval ${pgd}

variant grass               description "Build Grass 7 plugin" {

    depends_lib-append      port:grass7
    configure.args-delete  "-DWITH_GRASS7=OFF"
    configure.args-append  "-DWITH_GRASS7=ON"
    configure.args-append   \
                "-DGRASS_PREFIX7=${prefix}/share/grass-7.2.2"
}

configure.dir               ${worksrcpath}/build
configure.cmd               cmake ..

configure.args-append  "-DCMAKE_CXX_COMPILER=${configure.cxx}"
configure.args-append  "-DCMAKE_C_COMPILER=${configure.cc}"
configure.args-append  "-DEXPAT_INCLUDE_DIR=${prefix}/include"
configure.args-append  "-DEXPAT_LIBRARY=${prefix}/lib/libexpat.dylib"
configure.args-append  "-DCMAKE_INSTALL_PREFIX=${applications_dir}"
configure.args-append  "-DQGIS_MACAPP_BUNDLE=0"
configure.args-append  "-DGDAL_CONFIG=${prefix}/bin/gdal-config"
configure.args-append  "-DGDAL_INCLUDE_DIR=${prefix}/include"
configure.args-append  "-DGDAL_LIBRARY=${prefix}/lib/libgdal.dylib"
configure.args-append  "-DGEOS_CONFIG=${prefix}/bin/geos-config"
configure.args-append  "-DGEOS_INCLUDE_DIR=${prefix}/include"
configure.args-append  "-DGEOS_LIBRARY=${prefix}/lib/libgeos_c.dylib"
configure.args-append  "-DGSL_CONFIG=${prefix}/bin/gsl-config"
configure.args-append  "-DPROJ_INCLUDE_DIR=${prefix}/include"
configure.args-append  "-DPROJ_LIBRARY=${prefix}/lib/libproj.dylib"
configure.args-append  \
        "-DSPATIALINDEX_LIBRARY=${prefix}/lib/libspatialindex.dylib"
#configure.args-append  "-DCMAKE_BUILD_TYPE=DEBUG"
configure.args-append  "-DCMAKE_BUILD_TYPE=RELEASE"

post-destroot {
    # qgis_bench app doesnâ€™t link properly. Who uses this anyway????
    system -W ${destroot}/Applications/MacPorts/QGIS.app/Contents/MacOS/bin "rm -rf qgis_bench.app"
}


use_parallel_build          yes
build.dir                   ${worksrcpath}/build
destroot.target             install
